---
- hosts: nohost:myhosts
  name: Set global variables for all hosts
  gather_facts: False

  tasks:
  - set_fact: timestamp="{{ lookup('pipe', 'date +%Y%m%d_%H%M%S') }}"
  - set_fact: rootdir="/root"
  - set_fact: csvformat=False                   # True if we want it comma-separated

- hosts: nohost
  gather_facts: False
  name: Add header for CSV

  tasks:
  - name: Add header
    local_action: shell echo -n "{{item}}," >> {{ rootdir }}/allhosts_sysinfo_{{timestamp}}.csv
    with_items:
      - HostName
      - ServerStatus
      - ServerModel
      - BiosVersion
      - AssetTag
      - ServiceTag
      - SerialNumber
      - MemoryGiB
      - MemoryHealth
      - CPUModel
      - CPUHealth
      - CPUCount
      - PowerState
      - ConsumedWatts           # Power consumed (watts)
      - IdracFirmwareVersion
      - IdracHealth
    when: csvformat == True
  - local_action: shell echo "" >> {{ rootdir }}/allhosts_sysinfo_{{timestamp}}.csv
    when: csvformat == True

- hosts: myhosts
  name: PowerEdge iDRAC Get System Information
  gather_facts: False

  # Here we define global variables, but if some servers have different
  # credentials, then place these variables in /etc/ansible/hosts to override
  # for each host
  vars:
     idracuser: root
     idracpswd: calvin

  tasks:

  - name: Set temporary file to place results
    set_fact: outfile={{rootdir}}/{{host}}/{{host}}_sysinfo_{{timestamp}}

  - name: Create dropoff directory for host if needed
    local_action: file path={{rootdir}}/{{host}} state=directory

  - name: Prepend Hostname at the beginning of each line
    local_action: shell echo -n {{ host }}"," >> {{ outfile }}.csv
    when: csvformat == True

  - name: Get system information
    include: get_sysinfo.yml action={{item}}
    with_items:
      - ServerStatus
      - ServerModel
      - BiosVersion
      - AssetTag
      - ServiceTag
      - SerialNumber
      - MemoryGiB
      - MemoryHealth
      - CPUModel
      - CPUHealth
      - CPUCount
      - PowerState
      - ConsumedWatts		# Power consumed (watts)
      - IdracFirmwareVersion
      - IdracHealth

  - local_action: shell echo "" >> {{ outfile }}.csv
    when: csvformat == True

  - name: Combine all host outputs to one CSV file
    local_action: shell cat {{ outfile }}.csv >> {{ rootdir }}/allhosts_sysinfo_{{timestamp}}.csv
    when: csvformat == True

  - name: Remove temporary results file
    local_action: file path={{ outfile }} state=absent
